
-- DAHA ÖNCE EKLEDİĞİNİZ TABLOLARI SİLER DIKKAT DIKKAT DIKKAT
DROP SCHEMA PUBLIC CASCADE;
CREATE SCHEMA PUBLIC;

-- TABLOLARI EKLER
CREATE TABLE SHIPS(
	SHIPNO INT  primary key,
	SHIPNAME VARCHAR(20),
	SHIPTYPE VARCHAR(20),
	PNO INT CHECK (PNO>0),
	CAPTAIN_NO BIGINT
);

CREATE TABLE STAFF(
	SSN BIGINT primary key,		--9 haneli sosyal güvenlik no
    SUPERSSN BIGINT,               --gemide çalışanların superssn'i = kaptan, limanda çalışanların = başkan
    FNAME VARCHAR(20),
    LNAME VARCHAR(20),
    --KIND  VARCHAR(10),  			--worker, soldier, marine. 
    SEX	VARCHAR(7),	
    BDATE DATE, 	  							--doğum tarihi  
    SALARY INT,							-- 5000 TL, 10000 TL...
	P_NO INT,									--PORTS no
	S_NO INT  					--SHIP no		
);

CREATE TABLE PORTS(
	PORTS_NO INT  primary key,			-- army isimli PORTSların no'su 
    PORTS_NAME VARCHAR(20),	
    PORTS_TYPE VARCHAR(20),		--sadece 3 tür liman var: Commercial, Transfer and Army
    EXEC_NO BIGINT CHECK (EXEC_NO>0),     	--başkan ID'si
	PORTS_LOCATION VARCHAR(20)
);

CREATE TABLE EXECUTIVES(
	SSN BIGINT  primary key, 			--11 haneli T.C. kimlik no
	FNAME VARCHAR(20) NOT NULL,
	LNAME VARCHAR(20),
	PORTSNO INT NOT NULL,
	SALARY INT	
);

--PORTS tablosu--Commercial, Transfer and Army
INSERT INTO PORTS VALUES
(630, 'zonguldak','commercial', '12345678900', 'zonguldak' );
INSERT INTO PORTS VALUES
(821, 'yalıkavak','army', '92874625112', 'izmir' );
INSERT INTO PORTS VALUES
(590, 'zeytinburnu','commercial', '12378211230', 'istanbul' );
INSERT INTO PORTS VALUES
(950, 'tuzla','transfer', '76254012923', 'istanbul' );
INSERT INTO PORTS VALUES
(246, 'trabzon','commercial', '89271615231', 'trabzon' );
INSERT INTO PORTS VALUES
(520, 'bandırma','transfer', '12389127122', 'çanakkale' );
INSERT INTO PORTS VALUES
(810, 'rize','transfer', '89273124652', 'rize' );
INSERT INTO PORTS VALUES
(740, 'derince','commercial', '78236120593', 'izmit' );
INSERT INTO PORTS VALUES
(330, 'samsun','commercial', '21390412892', 'samsun' );
INSERT INTO PORTS VALUES
(147, 'hopa','commercial', '32145909012', 'artvin' );
INSERT INTO PORTS VALUES
(820, 'mudanya','army', '83728937884', 'bursa' );


--SHIPS tablosu --
INSERT INTO SHIPS VALUES
(30, 'yavuz', 'transfer', 630, '11765432107'); 
INSERT INTO SHIPS VALUES
(31, 'çakabey', 'army', 820, '11947285642'); 
INSERT INTO SHIPS VALUES
(32, 'midilli', 'army', 821, '11736213544'); 
INSERT INTO SHIPS VALUES
(33, 'gezgin', 'transfer', 590, '11392841221'); 
INSERT INTO SHIPS VALUES
(34, 'sakarya', 'commercial', 950, '11992723812'); 
INSERT INTO SHIPS VALUES
(35, 'adatepe', 'transfer', 246, '11123521103'); 
INSERT INTO SHIPS VALUES
(36, 'caddebostan', 'transfer', 520, '11907865215'); 
INSERT INTO SHIPS VALUES
(37, 'inkılap', 'transfer', 810, '11382913250'); 
INSERT INTO SHIPS VALUES
(38, 'beşiktaş', 'transfer', 330, '11782131215'); 
INSERT INTO SHIPS VALUES
(39, 'anadolufeneri', 'transfer', 147, '11763423569'); 
INSERT INTO SHIPS VALUES
(40, 'atalanta', 'commercial', 740, '11030405623'); 
-- STAFF tablosu--

INSERT INTO STAFF VALUES 
(11765432107, 11763423569, 'ali', 'kapı', 'male', '22-MAY-78', '2500', 630,30 );
INSERT INTO STAFF VALUES 
(11763423569, 11765432107, 'veli', 'çınar', 'male', '22-MAY-78', '2500', 147,39 );
INSERT INTO STAFF VALUES 
(11947285642, 11736213544, 'ahmet', 'yurt', 'male', '22-MAY-78', '2500', 820,31 );
INSERT INTO STAFF VALUES 
(11736213544, 11947285642, 'kemal', 'elmas', 'male', '22-MAY-78', '2500', 821,32 );
INSERT INTO STAFF VALUES 
(11030405623, 11392841221, 'soner', 'sarı', 'male', '22-MAY-78', '2500', 740,40 );
INSERT INTO STAFF VALUES 
(11392841221, 11030405623, 'yunus', 'bayram', 'male', '22-MAY-78', '2500', 590,33 );
INSERT INTO STAFF VALUES 
(11992723812, 11123521103, 'ismail', 'güneş', 'male', '22-MAY-78', '2500', 950,34 );
INSERT INTO STAFF VALUES 
(11123521103, 11992723812, 'seyfi', 'dursun', 'male', '22-MAY-78', '2500', 246,35 );
INSERT INTO STAFF VALUES 
(11907865215, 22837261233, 'ayşe', 'bayrak', 'female', '22-MAY-78', '2500', 520,36 );
INSERT INTO STAFF VALUES 
(11382913250, 11907865215, 'merve', 'toy', 'female', '22-MAY-78', '2500', 810,37 );
INSERT INTO STAFF VALUES 
(11782131215, 11382913250, 'seyhan', 'şaşko', 'female', '22-MAY-78', '2500', 330,38 );
--marines
INSERT INTO STAFF VALUES 
(22837261233, 11765432107, 'seyhan', 'şaşko', 'female', '22-MAY-78', '2500', 147,39 );
INSERT INTO STAFF VALUES 
(22123412490, 11763423569, 'funda', 'arar', 'female', '22-MAY-78', '2500', 950,34 );
INSERT INTO STAFF VALUES 
(22901237123, 11030405623, 'esra', 'tam','female', '22-MAY-78', '2500', 330,38 );
--soldiers
INSERT INTO STAFF VALUES 
(33782131214, 11947285642, 'mehmet', 'şirin','male', '22-MAY-78', '3000', 820,31 );
INSERT INTO STAFF VALUES 
(33782131213, 11736213544, 'salih', 'yel','male', '22-MAY-78', '3000', 821,32 );
INSERT INTO STAFF VALUES 
(33782131212, 11947285642, 'emre', 'ceylan', 'male', '22-MAY-78', '3000', 820,31 );


--EXECUTIVES--
INSERT INTO EXECUTIVES VALUES
(12345678900, 'sevim', 'güneş',630, '9000' );
INSERT INTO EXECUTIVES VALUES
(92874625112, 'cengiz', 'ballı',821, '9500' );
INSERT INTO EXECUTIVES VALUES
('12378211230', 'john', 'wick',590, '9800' );
INSERT INTO EXECUTIVES VALUES
('76254012923', 'saygı', 'bilir',950, '9200' );
INSERT INTO EXECUTIVES VALUES
('89271615231', 'dorukhan', 'tok',246, '10000' );
INSERT INTO EXECUTIVES VALUES
('12389127122', 'taylan', 'kibar',520, '10000' );
INSERT INTO EXECUTIVES VALUES
('89273124652', 'kemal', 'sunal',810, '8200' );
INSERT INTO EXECUTIVES VALUES
('78236120593', 'elif', 'orman',740, '8700' );
INSERT INTO EXECUTIVES VALUES
('21390412892', 'sevil', 'tunç',330, '8800' );
INSERT INTO EXECUTIVES VALUES
('32145909012', 'hasan', 'tosun',147, '11000' );
INSERT INTO EXECUTIVES VALUES
('83728937884', 'EZEL', 'BAYRAKTAR', 820,'12000');


--	1.MADDE 
	
	-- EN AZ 4 TABLO

-- 2. VE 3.MADDE SILME VE SAYI KISITI DATALARDAN SONRA EKLENMESI GEREKIYOR

ALTER TABLE SHIPS ADD FOREIGN KEY(PNO) REFERENCES PORTS(PORTS_NO) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE SHIPS ADD FOREIGN KEY(CAPTAIN_NO) REFERENCES STAFF(SSN) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE PORTS ADD FOREIGN KEY(EXEC_NO) REFERENCES EXECUTIVES(SSN) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE STAFF ADD FOREIGN KEY(P_NO) REFERENCES PORTS(PORTS_NO) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE STAFF ADD FOREIGN KEY(SUPERSSN) REFERENCES STAFF(SSN) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE STAFF ADD FOREIGN KEY(S_NO) REFERENCES SHIPS(SHIPNO) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE EXECUTIVES ADD FOREIGN KEY(PORTSNO) REFERENCES PORTS(PORTS_NO) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE PORTS ADD CHECK(EXEC_NO>0);
ALTER TABLE PORTS ADD CHECK(PORTS_NO>0);

-- 4.MADDE  UYGULAMANIN İÇİNDE MEVCUTTUR

-- CALISAN ISLEMLERI

INSERT INTO STAFF 
VALUES(nextval('staffssn'),%s, '%s', '%s', '%s', '%s', %s, %s, %s);

UPDATE STAFF SET SUPERSSN = %s, FNAME = '%s', LNAME = '%s', BDATE = '%s', SALARY = %s, P_NO = %s, S_NO = %s 
WHERE SSN = %s;

DELETE FROM STAFF WHERE SSN = '%s'; 

-- GEMI ISLEMLERI
INSERT INTO SHIPS 
VALUES(nextval('ship_no_generator'),'%s', '%s', %s, %s);

UPDATE SHIPS SET shipname = '%s', shiptype = '%s', pno = %s, captain_no = %s 
WHERE SHIPNO = %s;

DELETE FROM SHIPS WHERE SHIPNO = '%s';

--LIMAN ISLERMLERI
INSERT INTO PORTS 
VALUES(nextval('port_no_generator'),'%s', '%s', %s, '%s');

UPDATE PORTS SET PORTS_NAME = '%s', PORTS_TYPE = '%s', EXEC_NO = %s, PORTS_LOCATION = '%s' 
WHERE PORTS_NO = %s;


-- 5.MADDE	UYGULAMANIN İÇİNDE MEVCUTTUR
SELECT *FROM STAFF WHERE SSN = '%s'
SELECT *FROM SHIPS WHERE SHIPNO = %s
SELECT *FROM ports WHERE ports_no = '%s'

-- 6.MADDE VİEW  POSTGRE DATABASE'İNİN İÇİNDE OLACAK				-- HEPSİNİ GÖSTER
CREATE OR REPLACE VIEW ALLINFO AS 
SELECT ST.SSN,SUPER.FNAME AS SUPERVISOR, ST.FNAME, ST.LNAME,ST.SEX,ST.BDATE,ST.SALARY, LI.PORTS_NAME, SH.SHIPNAME
FROM STAFF AS ST, STAFF AS SUPER, PORTS AS LI, SHIPS AS SH
WHERE ST.SUPERSSN = SUPER.SSN AND ST.P_NO = LI.PORTS_NO AND ST.S_NO = SH.SHIPNO;

SELECT *FROM ALLINFO;

CREATE VIEW ALL_SHIPS AS 
SELECT SHIPNO,SHIPNAME,SHIPTYPE,PORTS_NAME,FNAME FROM SHIPS SH,PORTS PO,STAFF ST
WHERE SH.CAPTAIN_NO = ST.SSN AND SH.PNO = PO.PORTS_NO;

SELECT *FROM ALL_SHIPS;

CREATE VIEW ALL_PORTS AS 
SELECT PORTS_NO,PORTS_NAME,PORTS_TYPE,FNAME,PORTS_LOCATION
FROM PORTS, EXECUTIVES WHERE EXEC_NO = SSN;

SELECT *FROM ALL_PORTS;

CREATE VIEW ALL_EXECUTIVES AS
SELECT SSN, FNAME,LNAME,PORTS_NAME, SALARY
FROM EXECUTIVES E, PORTS PO WHERE E.PORTSNO = PO.PORTS_NO;

-- 7.MADDE SEQUENCE	POSTGRE DATABASE'İNİN İÇİNDE OLACAK
CREATE SEQUENCE STAFFSSN
START WITH 10000000000
INCREMENT BY 1
MAXVALUE 99999999999
NO CYCLE;

CREATE SEQUENCE SHIP_NO_GENERATOR
START WITH 1
INCREMENT BY 1
MAXVALUE 1000
NO CYCLE;

CREATE SEQUENCE PORT_NO_GENERATOR
START WITH 1
INCREMENT BY 1
MAXVALUE 20
NO CYCLE;

-- 8.MADDE UNİON, BU KOMUTLAR UYGULAMANIN İÇİNDE MEVCUTTUR
SELECT FNAME,LNAME,SALARY,P_NO FROM STAFF
UNION
SELECT FNAME,LNAME,SALARY,PORTSNO FROM EXECUTIVES;


-- 9.MADDE AGGREGATE FONKSİYON, HAVING. 	BU KOMUTLAR UYGULAMANIN İÇİNDE MEVCUTTUR 
SELECT AVG(SALARY) FROM STAFF;

SELECT *FROM STAFF
WHERE SALARY>(SELECT AVG(SALARY) FROM STAFF);

SELECT PORTS_NAME ,COUNT(SSN) FROM (SELECT SSN, PORTS_NAME FROM STAFF, PORTS WHERE P_NO = PORTS_NO) AS T1 
GROUP BY PORTS_NAME HAVING COUNT(SSN)>%s;



-- 10.MADDE
--		10.A	BİR BAŞKAN KAÇ LİMANI YÖNETİYOR
CREATE or REPLACE FUNCTION einfo ( BSSN BIGINT, out TOPLAM NUMERIC) AS $$

DECLARE 
	MY_CURSOR CURSOR FOR SELECT  E.SSN, po.PORTS_NAME
    FROM    EXECUTIVES e , PORTS PO WHERE E.SSN = PO.EXEC_NO;
BEGIN 
	TOPLAM = 0;
    FOR J IN MY_CURSOR LOOP
		IF J.SSN = BSSN THEN
			TOPLAM = TOPLAM+1;
		END IF;
	END LOOP;
END;
$$ LANGUAGE 'plpgsql';

--SELECT einfo(12345678900);
--DROP FUNCTION einfo(executives.SSN%type);

--		10.B	GİRİLEN MAAŞTAN DAHA YÜKSEK MAAŞA SAHİP OLAN KAÇ KİŞİ VAR
CREATE or REPLACE FUNCTION salary_info (esik integer)
RETURNS NUMERIC AS $$
DECLARE
    salary_cursor CURSOR FOR SELECT fname, lname, PORTS_NAME, salary 
                          FROM EXECUTIVES E, PORTS PO WHERE E.PORTSNO = PO.PORTS_NO
                    		 ;
	toplam numeric;
BEGIN 
    toplam = 0;
    FOR j IN salary_cursor LOOP
		IF J.SALARY > ESIK THEN
         toplam = TOPLAM +1;
		END IF;
    END LOOP;
    RETURN toplam;
END;
$$ LANGUAGE 'plpgsql';
--Select salary_info(esik);
--DROP FUNCTION salary_info(esik integer)

--		10.C	BİR LİMANIN ÇALIŞAN SAYISI
CREATE or REPLACE FUNCTION port_info(PORTNO INTEGER, OUT TOPLAM NUMERIC) AS $$

DECLARE
    MY_CURSOR CURSOR FOR SELECT  ST.SSN, PO.PORTS_NO, PO.PORTS_NAME
    FROM PORTS PO, STAFF ST WHERE PO.PORTS_NO = ST.P_NO AND PORTS_NO = PORTNO;
	
BEGIN 
	TOPLAM = 0;
    FOR J IN MY_CURSOR LOOP
		TOPLAM = TOPLAM+1;
	END LOOP;
END;
$$ LANGUAGE 'plpgsql';
--SELECT port_info(630);
--DROP FUNCTION port_info(PORTS.PORTS_NO%type);



-- 11.MADDE
--		11.A		-- 4000 BİNDEN DAHA YÜKSEK MAAŞ ALAN ÇALIŞAN EKLENEMEZ
CREATE FUNCTION trig_fonk()
RETURNS TRIGGER AS $$
BEGIN
    IF NEW.SALARY > 4000
    THEN RAISE EXCEPTION 'yeni eklenen elemanın maaşı çalışan maaş limitini geçemez' ;
    RETURN NULL;
ELSE 
    RETURN NEW;
END IF;

END;
$$  LANGUAGE 'plpgsql';

CREATE TRIGGER t_fonk
BEFORE INSERT
ON STAFF
FOR EACH ROW EXECUTE PROCEDURE trig_fonk();

--  	11.B	-- ADI DAHA ÖNCE MEVCUT OLAN GEMİ EKLENEMEZ
CREATE FUNCTION trig_fonk_2()
RETURNS TRIGGER AS $$
BEGIN
    IF NEW.SHIPNAME IN (SELECT SHIPNAME FROM SHIPS)
    THEN RAISE EXCEPTION 'yeni eklenen geminin adı mevcut gemilerle aynı olamaz' ;
		RETURN NULL;
	ELSE 
		RETURN NEW;
    END IF;

END;
$$  LANGUAGE 'plpgsql';

CREATE TRIGGER t_fonk2
BEFORE INSERT
ON SHIPS
FOR EACH ROW EXECUTE PROCEDURE trig_fonk_2();
