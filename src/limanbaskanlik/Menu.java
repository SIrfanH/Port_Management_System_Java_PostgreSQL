/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package limanbaskanlik;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sayid
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
        fillSuperCombo();
        fillPortsCombo();
        fillShipsCombo();
        fillshipCaptainCombo();
        fillShipPortsCombo();
        fillPortExecCombo();
        show_all();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        hepsi = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        salaryField = new javax.swing.JTextField();
        calisanNo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        portComboBox = new javax.swing.JComboBox<>();
        ShipID = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        shipComboBox = new javax.swing.JComboBox<>();
        search = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        fnameField = new javax.swing.JTextField();
        lnameField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        superComboBox = new javax.swing.JComboBox<>();
        update = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        sexComboBox = new javax.swing.JComboBox<>();
        delete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        bdateField = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        avgSalary = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        shipCaptainCombo = new javax.swing.JComboBox<>();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        shipNameField = new javax.swing.JTextField();
        shipNo = new javax.swing.JTextField();
        shipTypeCombo = new javax.swing.JComboBox<>();
        ShipID1 = new javax.swing.JLabel();
        shipPortCombo = new javax.swing.JComboBox<>();
        shipSearch = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        ShipID2 = new javax.swing.JLabel();
        limanNo = new javax.swing.JTextField();
        search1 = new javax.swing.JButton();
        update1 = new javax.swing.JButton();
        hepsi1 = new javax.swing.JButton();
        portNameField = new javax.swing.JTextField();
        ShipID9 = new javax.swing.JLabel();
        portLocationField = new javax.swing.JTextField();
        ShipID10 = new javax.swing.JLabel();
        ShipID11 = new javax.swing.JLabel();
        portExecCombo = new javax.swing.JComboBox<>();
        hepsi4 = new javax.swing.JButton();
        ShipID12 = new javax.swing.JLabel();
        portTypeCombo = new javax.swing.JComboBox<>();
        number = new javax.swing.JTextField();
        ShipID13 = new javax.swing.JLabel();
        hepsi5 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        ShipID3 = new javax.swing.JLabel();
        baskanNo = new javax.swing.JTextField();
        search2 = new javax.swing.JButton();
        hepsi2 = new javax.swing.JButton();
        ShipID4 = new javax.swing.JLabel();
        maas = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        hepsi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        hepsi.setText("HEPSİNİ GÖSTER");
        hepsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hepsiActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("SUPERVISOR:");

        calisanNo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        calisanNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calisanNoActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("CİNSİYET:");

        ShipID.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        ShipID.setText("Calışan Numarası:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("DOĞUM TARİHİ:");

        search.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        search.setText("ÇALIŞANI ARA");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("MAAŞ:");

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton5.setText("EKLE");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("LİMAN:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("GEMİ:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "KİMLİK NO", "SUPERVISOR", "AD", "SOYAD", "CİNSİYET", "DOĞUM TARİHİ", "SALARY", "LİMAN", "GEMİ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        superComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                superComboBoxActionPerformed(evt);
            }
        });

        update.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        update.setText("SEÇİLENİ GÜNCELLE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("AD:");

        sexComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        sexComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sexComboBoxItemStateChanged(evt);
            }
        });
        sexComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sexComboBoxActionPerformed(evt);
            }
        });

        delete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        delete.setText("SEÇİLENİ SİL");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("SOYAD:");

        jButton11.setText("MAŞI YÜKSEK OLAN");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel13.setText("01-JAN-90 Şeklinde Olmalı");

        avgSalary.setText("Ortalama Maaş");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(portComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(shipComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(salaryField, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bdateField, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(update, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(hepsi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(delete, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(avgSalary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(ShipID)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(calisanNo, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel5)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(fnameField, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4))
                                        .addGap(50, 50, 50)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(sexComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lnameField, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                                            .addComponent(superComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addComponent(jLabel8)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE)
                .addGap(14, 14, 14))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(calisanNo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ShipID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(search)
                            .addComponent(jButton11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(update)
                            .addComponent(avgSalary))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delete)
                        .addGap(8, 8, 8)
                        .addComponent(hepsi)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(fnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(lnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(superComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(sexComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(bdateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(salaryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(portComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(shipComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addGap(46, 46, 46))
        );

        jTabbedPane1.addTab("ÇALIŞAN İŞLEMLERİ", jPanel1);

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton6.setText("SEÇİLENİ GÜNCELLE");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton7.setText("EKLE");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton8.setText("SEÇİLENİ SİL");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton9.setText("HEPSİNİ GÖSTER");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("AD:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("TÜR:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("LİMAN:");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "GemiNo", "Ad", "Tür", "Liman", "KAPTAN"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("KAPTAN:");

        shipNameField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        shipNo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        shipTypeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Transfer", "Army", "Commercial" }));
        shipTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shipTypeComboActionPerformed(evt);
            }
        });

        ShipID1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ShipID1.setText("Gemi Numarası:");

        shipSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        shipSearch.setText("ARA");
        shipSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shipSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(shipSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(ShipID1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(shipNo, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                                    .addComponent(shipNameField)
                                    .addComponent(shipTypeCombo, 0, 136, Short.MAX_VALUE)
                                    .addComponent(shipPortCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(shipCaptainCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(shipNo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ShipID1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(shipSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9)
                        .addGap(43, 43, 43)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(shipNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(shipTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(shipPortCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(shipCaptainCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addComponent(jButton7)))
                .addContainerGap(116, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("GEMİ İŞLEMLERİ", jPanel2);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "LIMAN NUMARASI", "LİMAN ADI", "LİMAN TÜRÜ", "LİMAN BAŞKANI", "LİMAN LOKASYONU"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable4);

        ShipID2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        ShipID2.setText("Liman Numarası");

        limanNo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        limanNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limanNoActionPerformed(evt);
            }
        });

        search1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        search1.setText("LİMANI ARA");
        search1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search1ActionPerformed(evt);
            }
        });

        update1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        update1.setText("SEÇİLENİ GÜNCELLE");
        update1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update1ActionPerformed(evt);
            }
        });

        hepsi1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        hepsi1.setText("HEPSİNİ GÖSTER");
        hepsi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hepsi1ActionPerformed(evt);
            }
        });

        portNameField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        portNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portNameFieldActionPerformed(evt);
            }
        });

        ShipID9.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        ShipID9.setText("Liman Adı");

        portLocationField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        portLocationField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portLocationFieldActionPerformed(evt);
            }
        });

        ShipID10.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        ShipID10.setText("Liman Başkanı");

        ShipID11.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        ShipID11.setText("Liman Lokasyonu");

        portExecCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portExecComboActionPerformed(evt);
            }
        });

        hepsi4.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        hepsi4.setText("SAYIDAN DAHA YÜKSEK \nÇALIŞANA SAHİP LİMANLAR");
        hepsi4.setActionCommand("SAYIDAN DAHA YÜKSEK\nÇALIŞANA SAHİP LİMANLAR");
        hepsi4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hepsi4ActionPerformed(evt);
            }
        });

        ShipID12.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        ShipID12.setText("Sayı");

        portTypeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Commercial", "Transfer", "Army" }));

        number.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        number.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberActionPerformed(evt);
            }
        });

        ShipID13.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        ShipID13.setText("Liman Tipi");

        hepsi5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        hepsi5.setText("EKLE");
        hepsi5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hepsi5ActionPerformed(evt);
            }
        });

        jLabel14.setText("Çalışan sayısı");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(ShipID9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(portNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ShipID11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ShipID10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(portLocationField, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                                    .addComponent(portExecCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(portTypeCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addComponent(ShipID2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(limanNo, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(update1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(hepsi1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGap(121, 121, 121)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(search1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(ShipID12, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(number, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(hepsi4, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(hepsi5, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 11, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addComponent(ShipID13, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(875, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(limanNo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ShipID2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(search1)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(update1)
                        .addGap(18, 18, 18)
                        .addComponent(hepsi1)
                        .addGap(27, 27, 27)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(portNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ShipID9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(portLocationField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ShipID11, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ShipID10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(portExecCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(portTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(hepsi5)
                        .addGap(20, 20, 20)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(number, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ShipID12, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(hepsi4))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(363, Short.MAX_VALUE)
                    .addComponent(ShipID13, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(190, 190, 190)))
        );

        jTabbedPane1.addTab("LİMANLAR", jPanel3);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Başkan Numarası", "AD", "SOYAD", "LIMAN", "MAAŞ"
            }
        ));
        jScrollPane5.setViewportView(jTable5);

        ShipID3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        ShipID3.setText("BAŞKAN NUMARASI");

        baskanNo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        baskanNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baskanNoActionPerformed(evt);
            }
        });

        search2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        search2.setText("BAŞKANI ARA");
        search2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search2ActionPerformed(evt);
            }
        });

        hepsi2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        hepsi2.setText("HEPSİNİ GÖSTER");
        hepsi2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hepsi2ActionPerformed(evt);
            }
        });

        ShipID4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        ShipID4.setText("MAAŞ");

        maas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        maas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maasActionPerformed(evt);
            }
        });

        jButton1.setText("DAHA YÜKSEK MAAŞ ALANLARIN SAYISI");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel16.setText("LIMAN SAYISI:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(ShipID4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(maas, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(ShipID3)
                                        .addGap(18, 18, 18)
                                        .addComponent(baskanNo, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(hepsi2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(search2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(jButton1))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(138, 138, 138)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(baskanNo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ShipID3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(search2)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hepsi2)
                .addGap(50, 50, 50)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maas, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ShipID4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Başkan İşlemleri", jPanel4);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ad", "Soyad", "Maaş", "Port Number"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 943, Short.MAX_VALUE)
                .addGap(29, 29, 29))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("BAŞKANLAR VE ÇALIŞANLAR", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
            // TODO add your handling code here:
            search_table();
        
    }//GEN-LAST:event_searchActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        updateCalisan();
    }//GEN-LAST:event_updateActionPerformed

    private void superComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superComboBoxActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_superComboBoxActionPerformed
    private void fillSuperCombo()
    {
        PostgreConnector posql = new PostgreConnector();  
        Connection con = posql.connectorSender(); 
        
        try{       
            
            Statement stmt=con.createStatement(); 
            String Komut = String.format("select ssn from staff ");
            ResultSet rs =  stmt.executeQuery(Komut);
            
            while(rs.next())
            {
                String ssn = rs.getString("SSN");
                superComboBox.addItem(ssn);
            }
            
            
            
        }catch(Exception e){ 
            System.out.println(e);
            System.out.println("SQL EXception");
        }
    }
    
    private void fillPortsCombo()
    {
        PostgreConnector posql = new PostgreConnector();  
        Connection con = posql.connectorSender(); 
        
        try{       
            
            Statement stmt=con.createStatement(); 
            String Komut = String.format("select ports_no from ports ");
            ResultSet rs =  stmt.executeQuery(Komut);
            
            while(rs.next())
            {
                String portNo = rs.getString("ports_no");
                portComboBox.addItem(portNo);
            }
            
            
            
        }catch(Exception e){ 
            System.out.println(e);
            System.out.println("SQL EXception");
        }
    }
    
    private void fillShipsCombo()
    {
        PostgreConnector posql = new PostgreConnector();  
        Connection con = posql.connectorSender(); 
        
        try{       
            
            Statement stmt=con.createStatement(); 
            String Komut = String.format("select shipno from ships ");
            ResultSet rs =  stmt.executeQuery(Komut);
            
            while(rs.next())
            {
                String shipno = rs.getString("shipno");
                shipComboBox.addItem(shipno);
            }
            
            
            
        }catch(Exception e){ 
            System.out.println(e);
            System.out.println("SQL EXception");
        }
    }
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        updateShip();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        add_ship();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void shipSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shipSearchActionPerformed
        // TODO add your handling code here:
        search_Ships_table();
    }//GEN-LAST:event_shipSearchActionPerformed

    private void calisanNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calisanNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_calisanNoActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        calisaniSil();
        search_table();
    }//GEN-LAST:event_deleteActionPerformed

    private void hepsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hepsiActionPerformed
        // TODO add your handling code here:
        show_all_calisan();
    }//GEN-LAST:event_hepsiActionPerformed

    private void sexComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sexComboBoxItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_sexComboBoxItemStateChanged

    private void sexComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sexComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sexComboBoxActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        add_Calisan();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        salaryGreaterThanAVG();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        delete_Ship();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        show_all_ships();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void shipTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shipTypeComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_shipTypeComboActionPerformed

    private void limanNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limanNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_limanNoActionPerformed

    private void search1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search1ActionPerformed
        // TODO add your handling code here:
        search_port();
    }//GEN-LAST:event_search1ActionPerformed

    private void update1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update1ActionPerformed
        // TODO add your handling code here:
        update_port();
    }//GEN-LAST:event_update1ActionPerformed

    private void hepsi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hepsi1ActionPerformed
        // TODO add your handling code here:
        show_all_ports();
    }//GEN-LAST:event_hepsi1ActionPerformed

    private void baskanNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baskanNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_baskanNoActionPerformed

    private void search2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search2ActionPerformed
        // TODO add your handling code here:
        search_baskan();
       
    }//GEN-LAST:event_search2ActionPerformed

    private void maasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maasActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        numerbeOf();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void portNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portNameFieldActionPerformed

    private void portLocationFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portLocationFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portLocationFieldActionPerformed

    private void hepsi4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hepsi4ActionPerformed
        // TODO add your handling code here:
        searchForThreshold();
    }//GEN-LAST:event_hepsi4ActionPerformed

    private void numberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numberActionPerformed

    private void hepsi5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hepsi5ActionPerformed
        // TODO add your handling code here:
        add_port();
    }//GEN-LAST:event_hepsi5ActionPerformed

    private void portExecComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portExecComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portExecComboActionPerformed

    private void hepsi2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hepsi2ActionPerformed
        // TODO add your handling code here:
        show_all_baskans();
    }//GEN-LAST:event_hepsi2ActionPerformed
    
    
    
    private void fillPortExecCombo()
    {
        PostgreConnector posql = new PostgreConnector();  
        Connection con = posql.connectorSender(); 
        
        try{       
            
            Statement stmt=con.createStatement(); 
            String Komut = String.format("select ssn from executives;");
            ResultSet rs =  stmt.executeQuery(Komut);
            
            while(rs.next())
            {
                String ssn = rs.getString("ssn");
                portExecCombo.addItem(ssn);
            }
            
            
            
        }catch(Exception e){ 
            System.out.println(e);
            System.out.println("SQL EXception");
        }
    }
    
    private void fillShipPortsCombo()
    {
        PostgreConnector posql = new PostgreConnector();  
        Connection con = posql.connectorSender(); 
        
        try{       
            
            Statement stmt=con.createStatement(); 
            String Komut = String.format("select Ports_no from ports ");
            ResultSet rs =  stmt.executeQuery(Komut);
            
            while(rs.next())
            {
                String portsNo = rs.getString("ports_no");
                shipPortCombo.addItem(portsNo);
            }
            
            
            
        }catch(Exception e){ 
            System.out.println(e);
            System.out.println("SQL EXception");
        }
    }
    
    private void fillshipCaptainCombo()
    {
        PostgreConnector posql = new PostgreConnector();  
        Connection con = posql.connectorSender(); 
        
        try{       
            
            Statement stmt=con.createStatement(); 
            String Komut = String.format("select ssn from staff ");
            ResultSet rs =  stmt.executeQuery(Komut);
            
            while(rs.next())
            {
                String ssn = rs.getString("SSN");
                shipCaptainCombo.addItem(ssn);
            }
            
            
            
        }catch(Exception e){ 
            System.out.println(e);
            System.out.println("SQL EXception");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }
    
    private void search_table()
    {
        PostgreConnector posql = new PostgreConnector();
        Connection con = posql.connectorSender();
        
        int column_count;
        
        try{
            
            Statement stmt = con.createStatement();
            System.out.println(calisanNo.getText());
            String Komut = String.format("SELECT *FROM STAFF WHERE SSN = '%s'", calisanNo.getText() );
            ResultSet searchRS = stmt.executeQuery(Komut);
            ResultSetMetaData Rss = searchRS.getMetaData();
            column_count = Rss.getColumnCount();
            
            DefaultTableModel df = (DefaultTableModel)jTable1.getModel();
            df.setRowCount(0);
            
            while (searchRS.next()) {
                Vector v2 = new Vector();
                
                for(int a=1; a<=column_count; a++)
                {
                 
                    v2.add(searchRS.getString("SSN"));
                    v2.add(searchRS.getString("SUPERSSN"));               // bilgiler tabloya daha kolay eklensin diye bir vector objesi kullandim
                    v2.add(searchRS.getString("FNAME"));
                    v2.add(searchRS.getString("LNAME"));
                    v2.add(searchRS.getString("SEX"));
                    v2.add(searchRS.getString("BDATE"));
                    v2.add(searchRS.getString("SALARY"));
                    v2.add(searchRS.getString("P_NO"));
                    v2.add(searchRS.getString("S_NO"));
            
                }
                
                df.addRow(v2);
            
                
            }
        } catch (SQLException e) {
            System.out.println(e);
            System.out.println("Exception");
        }
    }
    
    private void calisaniSil(){
        
        PostgreConnector posql = new PostgreConnector();  
        Connection con = posql.connectorSender(); 
        
        DefaultTableModel Table = (DefaultTableModel)jTable1.getModel();
        int SelectedIndex = jTable1.getSelectedRow();
        
        String ssn = Table.getValueAt(SelectedIndex, 0).toString();
        
        try{       
            
            Statement stmt=con.createStatement(); 
            String Komut = String.format("delete from staff where ssn = '%s' ", ssn );
            stmt.executeUpdate(Komut);
            
        }catch(Exception e){ 
            System.out.println(e);
            System.out.println("SQL EXception");
        }
        
    }
    
    private void show_all_calisan()
    {
        PostgreConnector posql = new PostgreConnector();
        Connection con = posql.connectorSender();
        
        int column_count;
        
        try{
            
            Statement stmt = con.createStatement();
            System.out.println(calisanNo.getText());
            String Komut = String.format("SELECT *FROM ALLINFO");
            ResultSet searchRS = stmt.executeQuery(Komut);
            ResultSetMetaData Rss = searchRS.getMetaData();
            column_count = Rss.getColumnCount();
            
            DefaultTableModel df = (DefaultTableModel)jTable1.getModel();
            df.setRowCount(0);
            
            while (searchRS.next()) {
                Vector v2 = new Vector();
                
                for(int a=1; a<=column_count; a++)
                {
                 
                    v2.add(searchRS.getString("SSN"));
                    v2.add(searchRS.getString("SUPERVISOR"));               // bilgiler tabloya daha kolay eklensin diye bir vector objesi kullandim
                    v2.add(searchRS.getString("FNAME"));
                    v2.add(searchRS.getString("LNAME"));
                    v2.add(searchRS.getString("SEX"));
                    v2.add(searchRS.getString("BDATE"));
                    v2.add(searchRS.getString("SALARY"));
                    v2.add(searchRS.getString("PORTS_NAME"));
                    v2.add(searchRS.getString("SHIPNAME"));
            
                }
                df.addRow(v2);
            }
        } catch (SQLException e) {
            System.out.println(e);
            System.out.println("Exception");
        } 
    }
    
    private void add_Calisan()
    {
        PostgreConnector posql = new PostgreConnector();  
        Connection con = posql.connectorSender(); 
        
        String fname = fnameField.getText();
        String lname = lnameField.getText();
        String bdate = bdateField.getText();
        String salary = salaryField.getText();
        String sex = sexComboBox.getSelectedItem().toString();
        String superssn = superComboBox.getSelectedItem().toString();
        String port = portComboBox.getSelectedItem().toString();
        String ship = shipComboBox.getSelectedItem().toString();
        
        try{       
            
            Statement stmt=con.createStatement(); 
            String Komut = String.format("INSERT INTO STAFF VALUES(nextval('staffssn'),%s, '%s', '%s', '%s', '%s', %s, %s, %s);",
                                            superssn, fname, lname, sex, bdate, salary, port, ship);
            stmt.executeUpdate(Komut);
            
        }catch(Exception e){ 
            System.out.println(e);
            System.out.println("SQL EXception");
        }
    }
    
    private void updateCalisan()
    {
        PostgreConnector posql = new PostgreConnector();  
        Connection con = posql.connectorSender(); 
        
        DefaultTableModel Table = (DefaultTableModel)jTable1.getModel();
        int SelectedIndex = jTable1.getSelectedRow();
        
        String ssn = Table.getValueAt(SelectedIndex, 0).toString();
        String newSuper = Table.getValueAt(SelectedIndex, 1).toString();
        String newFname = Table.getValueAt(SelectedIndex, 2).toString();
        String newLname = Table.getValueAt(SelectedIndex, 3).toString();
        //String newSex = Table.getValueAt(SelectedIndex, 1).toString();
        String newBdate = Table.getValueAt(SelectedIndex, 5).toString();
        String newSalary = Table.getValueAt(SelectedIndex, 6).toString();
        String newPortNo = Table.getValueAt(SelectedIndex, 7).toString();
        String newShipNo = Table.getValueAt(SelectedIndex, 8).toString();
        
        System.out.println(newLname);
        
        
        try{       
            
            Statement stmt=con.createStatement(); 
            String Komut;
            Komut = String.format("UPDATE STAFF SET SUPERSSN = %s, FNAME = '%s', LNAME = '%s', BDATE = '%s', SALARY = %s, P_NO = %s, S_NO = %s " +
                    "WHERE SSN = %s;", newSuper,newFname,newLname,newBdate,newSalary,newPortNo,newShipNo, ssn );
            stmt.executeUpdate(Komut);
            
        }catch(Exception e){ 
            System.out.println(e);
            System.out.println("SQL EXception");
        }
    }
    
    private void salaryGreaterThanAVG()
    {
        PostgreConnector posql = new PostgreConnector();
        Connection con = posql.connectorSender();
        
        int column_count;
        
        try{       
            
            Statement stmt=con.createStatement(); 
            String Komut = String.format("select avg(salary) from staff");
            ResultSet rs = stmt.executeQuery(Komut);
            
            while(rs.next())
            {
                String avg = rs.getString("avg");
                avgSalary.setText("AVG ="+ avg);
            }
            
        }catch(Exception e){ 
            System.out.println(e);
            System.out.println("SQL EXception");
        }
        
        try{
            
            Statement stmt = con.createStatement();
            System.out.println(calisanNo.getText());
            String Komut = String.format("SELECT *FROM STAFF WHERE SALARY>(SELECT AVG(SALARY) FROM STAFF);");
            ResultSet searchRS = stmt.executeQuery(Komut);
            ResultSetMetaData Rss = searchRS.getMetaData();
            column_count = Rss.getColumnCount();
            
            DefaultTableModel df = (DefaultTableModel)jTable1.getModel();
            df.setRowCount(0);
            
            while (searchRS.next()) {
                Vector v2 = new Vector();
                
                for(int a=1; a<=column_count; a++)
                {
                 
                    v2.add(searchRS.getString("SSN"));
                    v2.add(searchRS.getString("SUPERSSN"));               // bilgiler tabloya daha kolay eklensin diye bir vector objesi kullandim
                    v2.add(searchRS.getString("FNAME"));
                    v2.add(searchRS.getString("LNAME"));
                    v2.add(searchRS.getString("SEX"));
                    v2.add(searchRS.getString("BDATE"));
                    v2.add(searchRS.getString("SALARY"));
                    v2.add(searchRS.getString("P_NO"));
                    v2.add(searchRS.getString("S_NO"));
            
                }
                
                df.addRow(v2);
            
                
            }
        } catch (SQLException e) {
            System.out.println(e);
            System.out.println("Exception");
        }
    }
    
    private void search_Ships_table()
    {
        PostgreConnector posql = new PostgreConnector();
        Connection con = posql.connectorSender();
        
        int column_count;
        
        try{
            
            Statement stmt = con.createStatement();
            String Komut = String.format("SELECT *FROM SHIPS WHERE SHIPNO = %s", shipNo.getText() );
            ResultSet searchRS = stmt.executeQuery(Komut);
            ResultSetMetaData Rss = searchRS.getMetaData();
            column_count = Rss.getColumnCount();
            
            DefaultTableModel df = (DefaultTableModel)jTable2.getModel();
            df.setRowCount(0);
            
            while (searchRS.next()) {
                Vector v2 = new Vector();
                
                for(int a=1; a<=column_count; a++)
                {
                 
                    v2.add(searchRS.getString("SHIPNO"));
                    v2.add(searchRS.getString("SHIPNAME"));               // bilgiler tabloya daha kolay eklensin diye bir vector objesi kullandim
                    v2.add(searchRS.getString("SHIPTYPE"));
                    v2.add(searchRS.getString("PNO"));
                    v2.add(searchRS.getString("CAPTAIN_NO"));
            
                }
                df.addRow(v2);
            }
        } catch (SQLException e) {
            System.out.println(e);
            System.out.println("Exception");
        }
    }
    
    private void updateShip()
    {
        PostgreConnector posql = new PostgreConnector();  
        Connection con = posql.connectorSender(); 
        
        DefaultTableModel Table = (DefaultTableModel)jTable2.getModel();
        int SelectedIndex = jTable2.getSelectedRow();
        
        String shipNo = Table.getValueAt(SelectedIndex, 0).toString();
        String shipName = Table.getValueAt(SelectedIndex, 1).toString();
        String shipType = Table.getValueAt(SelectedIndex, 2).toString();
        String portNo = Table.getValueAt(SelectedIndex, 3).toString();
        String captainNo = Table.getValueAt(SelectedIndex, 4).toString();
        
        
        try{       
            
            Statement stmt=con.createStatement(); 
            String Komut;
            Komut = String.format("UPDATE SHIPS SET shipname = '%s', shiptype = '%s', pno = %s, captain_no = %s " +
                    "WHERE SHIPNO = %s;", shipName,shipType,portNo,captainNo, shipNo );
            stmt.executeUpdate(Komut);
            
        }catch(Exception e){ 
            System.out.println(e);
            System.out.println("SQL EXception");
        }
    }
    
    private void delete_Ship(){
        
        PostgreConnector posql = new PostgreConnector();  
        Connection con = posql.connectorSender(); 
        
        DefaultTableModel Table = (DefaultTableModel)jTable2.getModel();
        int SelectedIndex = jTable2.getSelectedRow();
        
        String shipNo = Table.getValueAt(SelectedIndex, 0).toString();
        
        try{       
            
            Statement stmt=con.createStatement(); 
            String Komut = String.format("delete from ships where shipno = '%s' ", shipNo );
            stmt.executeUpdate(Komut);
            
        }catch(Exception e){ 
            System.out.println(e);
            System.out.println("SQL EXception");
        }
        
    }
    
    private void show_all_ships()
    {
        PostgreConnector posql = new PostgreConnector();
        Connection con = posql.connectorSender();
        
        int column_count;
        
        try{
            
            Statement stmt = con.createStatement();
            String Komut = String.format("SELECT *FROM ALL_SHIPS");
            ResultSet searchRS = stmt.executeQuery(Komut);
            ResultSetMetaData Rss = searchRS.getMetaData();
            column_count = Rss.getColumnCount();
            
            DefaultTableModel df = (DefaultTableModel)jTable2.getModel();
            df.setRowCount(0);
            
            while (searchRS.next()) {
                Vector v2 = new Vector();
                
                for(int a=1; a<=column_count; a++)
                {
                 
                    v2.add(searchRS.getString("SHIPNO"));
                    v2.add(searchRS.getString("SHIPNAME"));               // bilgiler tabloya daha kolay eklensin diye bir vector objesi kullandim
                    v2.add(searchRS.getString("SHIPTYPE"));
                    v2.add(searchRS.getString("PORTS_NAME"));
                    v2.add(searchRS.getString("FNAME"));
            
                }
                df.addRow(v2);
            }
        } catch (SQLException e) {
            System.out.println(e);
            System.out.println("Exception");
        } 
    }
    
    private void add_ship()
    {
        PostgreConnector posql = new PostgreConnector();  
        Connection con = posql.connectorSender(); 
        
        String shipName = shipNameField.getText();
        String shipType = shipTypeCombo.getSelectedItem().toString();
        String shipPortNo = shipPortCombo.getSelectedItem().toString();
        String shipCaptainNo = shipCaptainCombo.getSelectedItem().toString();
        
        try{       
            
            Statement stmt=con.createStatement(); 
            String Komut = String.format("INSERT INTO SHIPS VALUES(nextval('ship_no_generator'),'%s', '%s', %s, %s);",
                                            shipName,shipType,shipPortNo,shipCaptainNo);
            stmt.executeUpdate(Komut);
            
        }catch(Exception e){ 
            System.out.println(e);
            System.out.println("SQL EXception");
        }
    }
    
    private void show_all()
    {
        PostgreConnector posql = new PostgreConnector();
        Connection con = posql.connectorSender();
        
        int column_count;
        
        try{
            
            Statement stmt = con.createStatement();
            String Komut = String.format("SELECT FNAME,LNAME,SALARY,P_NO FROM STAFF UNION " +
                                            "SELECT FNAME,LNAME,SALARY,PORTSNO FROM EXECUTIVES;");
            ResultSet searchRS = stmt.executeQuery(Komut);
            ResultSetMetaData Rss = searchRS.getMetaData();
            column_count = Rss.getColumnCount();
            
            DefaultTableModel df = (DefaultTableModel)jTable3.getModel();
            df.setRowCount(0);
            
            while (searchRS.next()) {
                Vector v2 = new Vector();
                
                for(int a=1; a<=column_count; a++)
                {
                 
                    v2.add(searchRS.getString("FNAME"));
                    v2.add(searchRS.getString("LNAME"));               // bilgiler tabloya daha kolay eklensin diye bir vector objesi kullandim
                    v2.add(searchRS.getString("SALARY"));
                    v2.add(searchRS.getString("P_NO"));
            
                }
                df.addRow(v2);
            }
        } catch (SQLException e) {
            System.out.println(e);
            System.out.println("Exception");
        } 
    }
    
    private void search_port()
    {
        PostgreConnector posql = new PostgreConnector();
        Connection con = posql.connectorSender();
        
        int column_count;
        
        try{       
            
            Statement stmt=con.createStatement(); 
            String Komut = String.format("SELECT port_info(%s);", limanNo.getText());
            ResultSet rs = stmt.executeQuery(Komut);
            
            while(rs.next())
            {
                String sayi = rs.getString("port_info");
                jLabel14.setText("Çalışan sayısı ="+ sayi);
            }
            
        }catch(Exception e){ 
            System.out.println(e);
            System.out.println("SQL EXception");
        }
        
        try{
            
            Statement stmt = con.createStatement();
            String Komut = String.format("SELECT *FROM ports WHERE ports_no = '%s'", limanNo.getText() );
            ResultSet searchRS = stmt.executeQuery(Komut);
            ResultSetMetaData Rss = searchRS.getMetaData();
            column_count = Rss.getColumnCount();
            
            DefaultTableModel df = (DefaultTableModel)jTable4.getModel();
            df.setColumnCount(0);
            df.addColumn("LİMAN NUMARASI");
            df.addColumn("LİMAN ADI");
            df.addColumn("LİMAN TİPİ");
            df.addColumn("LİMAN BAŞKANI");
            df.addColumn("LİMAN LOKASYONU");
            df.setRowCount(0);
            
            while (searchRS.next()) {
                Vector v2 = new Vector();
                
                for(int a=1; a<=column_count; a++)
                {
                 
                    v2.add(searchRS.getString("PORTS_NO"));
                    v2.add(searchRS.getString("PORTS_NAME"));               // bilgiler tabloya daha kolay eklensin diye bir vector objesi kullandim
                    v2.add(searchRS.getString("PORTS_TYPE"));
                    v2.add(searchRS.getString("EXEC_NO"));
                    v2.add(searchRS.getString("PORTS_LOCATION"));
            
                }
                
                df.addRow(v2);
            
                
            }
        } catch (SQLException e) {
            System.out.println(e);
            System.out.println("Exception");
        }
    }
    
    private void update_port()
    {
        PostgreConnector posql = new PostgreConnector();  
        Connection con = posql.connectorSender(); 
        
        DefaultTableModel Table = (DefaultTableModel)jTable4.getModel();
        int SelectedIndex = jTable4.getSelectedRow();
        
        String portNo = Table.getValueAt(SelectedIndex, 0).toString();
        String portName = Table.getValueAt(SelectedIndex, 1).toString();
        String portType = Table.getValueAt(SelectedIndex, 2).toString();
        String portExec = Table.getValueAt(SelectedIndex, 3).toString();
        String portLocation = Table.getValueAt(SelectedIndex, 4).toString();
        
        
        try{       
            
            Statement stmt=con.createStatement(); 
            String Komut;
            Komut = String.format("UPDATE PORTS SET PORTS_NAME = '%s', PORTS_TYPE = '%s', EXEC_NO = %s, PORTS_LOCATION = '%s' " +
                    "WHERE PORTS_NO = %s;", portName,portType,portExec,portLocation, portNo );
            stmt.executeUpdate(Komut);
            
        }catch(Exception e){ 
            System.out.println(e);
            System.out.println("SQL EXception");
        }
    }
    
    private void show_all_ports()
    {
        PostgreConnector posql = new PostgreConnector();
        Connection con = posql.connectorSender();
        
        int column_count;
        
        try{
            
            Statement stmt = con.createStatement();
            String Komut = String.format("SELECT *FROM ALL_PORTS;");
            ResultSet searchRS = stmt.executeQuery(Komut);
            ResultSetMetaData Rss = searchRS.getMetaData();
            column_count = Rss.getColumnCount();
            
            DefaultTableModel df = (DefaultTableModel)jTable4.getModel();
            df.setRowCount(0);
            
            while (searchRS.next()) {
                Vector v2 = new Vector();
                
                for(int a=1; a<=column_count; a++)
                {
                 
                    v2.add(searchRS.getString("PORTS_NO"));
                    v2.add(searchRS.getString("PORTS_NAME"));               // bilgiler tabloya daha kolay eklensin diye bir vector objesi kullandim
                    v2.add(searchRS.getString("PORTS_TYPE"));
                    v2.add(searchRS.getString("FNAME"));
                    v2.add(searchRS.getString("PORTS_LOCATION"));
            
                }
                df.addRow(v2);
            }
        } catch (SQLException e) {
            System.out.println(e);
            System.out.println("Exception");
        } 
    }
    
    private void add_port()
    {
        PostgreConnector posql = new PostgreConnector();  
        Connection con = posql.connectorSender(); 
        
        String portName = portNameField.getText();
        String portType = portTypeCombo.getSelectedItem().toString();
        String portExecNo = portExecCombo.getSelectedItem().toString();
        String portLocation = portLocationField.getText();
        
        try{       
            
            Statement stmt=con.createStatement(); 
            String Komut = String.format("INSERT INTO PORTS VALUES(nextval('port_no_generator'),'%s', '%s', %s, '%s');",
                                            portName,portType,portExecNo,portLocation);
            stmt.executeUpdate(Komut);
            
        }catch(Exception e){ 
            System.out.println(e);
            System.out.println("SQL EXception");
        }
    }
    
    private void searchForThreshold()
    {
        PostgreConnector posql = new PostgreConnector();
        Connection con = posql.connectorSender();
        
        int column_count;
        
        try{
            
            Statement stmt = con.createStatement();
            String Komut = String.format("SELECT PORTS_NAME , COUNT(SSN) \n" +
                "FROM (SELECT SSN, PORTS_NAME FROM STAFF, PORTS WHERE P_NO = PORTS_NO) AS T1 "
                    + "GROUP BY PORTS_NAME HAVING COUNT(SSN)>%s", number.getText());
            ResultSet searchRS = stmt.executeQuery(Komut);
            ResultSetMetaData Rss = searchRS.getMetaData();
            column_count = Rss.getColumnCount();
            
            DefaultTableModel df = (DefaultTableModel)jTable4.getModel();
            df.setColumnCount(0);
            df.addColumn("Port Name");
            df.addColumn("Number of Workers");
            
         
            df.setRowCount(0);
            
            while (searchRS.next()) {
                Vector v2 = new Vector();
                
                for(int a=1; a<=column_count; a++)
                {
                 
                    v2.add(searchRS.getString("PORTS_NAME"));
                    v2.add(searchRS.getString("COUNT"));               // bilgiler tabloya daha kolay eklensin diye bir vector objesi kullandim
                }
                
                df.addRow(v2);
            
                
            }
        } catch (SQLException e) {
            System.out.println(e);
            System.out.println("Exception");
        }
    }
    
    private void search_baskan()
    {
        PostgreConnector posql = new PostgreConnector();
        Connection con = posql.connectorSender();
        
        int column_count;
        
        try{       
            
            Statement stmt=con.createStatement(); 
            String Komut = String.format("SELECT einfo(%s);", baskanNo.getText());
            ResultSet rs = stmt.executeQuery(Komut);
            
            while(rs.next())
            {
                String sayi = rs.getString("einfo");
                jLabel16.setText("LİMAN SAYISI: ="+ sayi);
            }
            
        }catch(Exception e){ 
            System.out.println(e);
            System.out.println("SQL EXception");
        }
        
        try{
            
            Statement stmt = con.createStatement();
            String Komut = String.format("SELECT *FROM EXECUTIVES WHERE SSN = %s", baskanNo.getText() );
            ResultSet searchRS = stmt.executeQuery(Komut);
            ResultSetMetaData Rss = searchRS.getMetaData();
            column_count = Rss.getColumnCount();
            
            DefaultTableModel df = (DefaultTableModel)jTable5.getModel();
            df.setRowCount(0);
            
            while (searchRS.next()) {
                Vector v2 = new Vector();
                
                for(int a=1; a<=column_count; a++)
                {
                 
                    v2.add(searchRS.getString("SSN"));
                    v2.add(searchRS.getString("FNAME"));               // bilgiler tabloya daha kolay eklensin diye bir vector objesi kullandim
                    v2.add(searchRS.getString("LNAME"));
                    v2.add(searchRS.getString("PORTSNO"));
                    v2.add(searchRS.getString("SALARY"));
            
                }
                df.addRow(v2);
            }
        } catch (SQLException e) {
            System.out.println(e);
            System.out.println("Exception");
        }
    }
    
    private void show_all_baskans()
    {
        PostgreConnector posql = new PostgreConnector();
        Connection con = posql.connectorSender();
        
        int column_count;
        
        try{
            
            Statement stmt = con.createStatement();
            String Komut = String.format("SELECT *FROM ALL_EXECUTIVES;");
            ResultSet searchRS = stmt.executeQuery(Komut);
            ResultSetMetaData Rss = searchRS.getMetaData();
            column_count = Rss.getColumnCount();
            
            DefaultTableModel df = (DefaultTableModel)jTable5.getModel();
            df.setRowCount(0);
            
            while (searchRS.next()) {
                Vector v2 = new Vector();
                
                for(int a=1; a<=column_count; a++)
                {
                 
                    v2.add(searchRS.getString("SSN"));
                    v2.add(searchRS.getString("FNAME"));               // bilgiler tabloya daha kolay eklensin diye bir vector objesi kullandim
                    v2.add(searchRS.getString("LNAME"));
                    v2.add(searchRS.getString("PORTS_NAME"));
                    v2.add(searchRS.getString("SALARY"));
            
                }
                df.addRow(v2);
            }
        } catch (SQLException e) {
            System.out.println(e);
            System.out.println("Exception");
        } 
    }
    
    private void numerbeOf()
    {
        PostgreConnector posql = new PostgreConnector();
        Connection con = posql.connectorSender();
        
        int column_count;
        
        try{       
            
            Statement stmt=con.createStatement(); 
            String Komut = String.format("Select salary_info(%S);", maas.getText());
            ResultSet rs = stmt.executeQuery(Komut);
            
            while(rs.next())
            {
                String sayi = rs.getString("salary_info");
                jLabel15.setText("Sayı:"+ sayi);
            }
            
        }catch(Exception e){ 
            System.out.println(e);
            System.out.println("SQL EXception");
        }
    }
    
    
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ShipID;
    private javax.swing.JLabel ShipID1;
    private javax.swing.JLabel ShipID10;
    private javax.swing.JLabel ShipID11;
    private javax.swing.JLabel ShipID12;
    private javax.swing.JLabel ShipID13;
    private javax.swing.JLabel ShipID2;
    private javax.swing.JLabel ShipID3;
    private javax.swing.JLabel ShipID4;
    private javax.swing.JLabel ShipID9;
    private javax.swing.JLabel avgSalary;
    private javax.swing.JTextField baskanNo;
    private javax.swing.JTextField bdateField;
    private javax.swing.JTextField calisanNo;
    private javax.swing.JButton delete;
    private javax.swing.JTextField fnameField;
    private javax.swing.JButton hepsi;
    private javax.swing.JButton hepsi1;
    private javax.swing.JButton hepsi2;
    private javax.swing.JButton hepsi4;
    private javax.swing.JButton hepsi5;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTextField limanNo;
    private javax.swing.JTextField lnameField;
    private javax.swing.JTextField maas;
    private javax.swing.JTextField number;
    private javax.swing.JComboBox<String> portComboBox;
    private javax.swing.JComboBox<String> portExecCombo;
    private javax.swing.JTextField portLocationField;
    private javax.swing.JTextField portNameField;
    private javax.swing.JComboBox<String> portTypeCombo;
    private javax.swing.JTextField salaryField;
    private javax.swing.JButton search;
    private javax.swing.JButton search1;
    private javax.swing.JButton search2;
    private javax.swing.JComboBox<String> sexComboBox;
    private javax.swing.JComboBox<String> shipCaptainCombo;
    private javax.swing.JComboBox<String> shipComboBox;
    private javax.swing.JTextField shipNameField;
    private javax.swing.JTextField shipNo;
    private javax.swing.JComboBox<String> shipPortCombo;
    private javax.swing.JButton shipSearch;
    private javax.swing.JComboBox<String> shipTypeCombo;
    private javax.swing.JComboBox<String> superComboBox;
    private javax.swing.JButton update;
    private javax.swing.JButton update1;
    // End of variables declaration//GEN-END:variables
}
